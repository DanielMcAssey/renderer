#!/bin/bash

check () {
  zoom[$1]=$(($1+1))
  x[$1]=$(($2*2))
  y[$1]=$(($3*2))
  for ((i[$1]=0; ${i[$1]}<2; i[$1]=${i[$1]}+1)); do
    for ((j[$1]=0; ${j[$1]}<2; j[$1]=${j[$1]}+1)); do
      xc=$((${x[$1]}+${i[$1]}))
      yc=$((${y[$1]}+${j[$1]}))
      if [ -e tiles/${zoom[$1]}/$xc/$yc.png ]; then
        clean=1
        break 2
      fi
      if [ ${zoom[$1]} -lt 16 ]; then
        check ${zoom[$1]} $xc $yc
      fi
    done
  done
}
                                                                              
search () {
  zoom[$1]=$(($1+1))
  x[$1]=$(($2*2))
  y[$1]=$(($3*2))
  z[$1]=$((2**${zoom[$1]}))
  for ((i[$1]=0; ${i[$1]}<2; i[$1]=${i[$1]}+1)); do
    for ((j[$1]=0; ${j[$1]}<2; j[$1]=${j[$1]}+1)); do
      tx=$((${x[$1]}+${i[$1]}))
      ty=$((${y[$1]}+${j[$1]}))
      os=$(echo "scale=10; ${z[$1]}/4096" | bc)
      tile=$(echo "scale=10; (${x[$1]}+${i[$1]}-$os)" | bc)
      tile=$(echo "scale=10; if ($tile < 0) $tile+${z[$1]} else $tile" | bc)
      minlon=$(echo "scale=10; (($tile/${z[$1]})*360)-180" | bc)
      tile=$(echo "scale=10; (${x[$1]}+${i[$1]}+1+$os)" | bc)
      tile=$(echo "scale=10; if ($tile >= ${z[$1]}) $tile-${z[$1]} else $tile" | bc)
      maxlon=$(echo "scale=10; (($tile/${z[$1]})*360)-180" | bc)
      tile=$(echo "scale=10; (${y[$1]}+${j[$1]}-$os)" | bc -l)
      tile=$(echo "scale=10; if ($tile < 0) 0 else $tile" | bc)
      yx=$(echo "scale=10; 4*a(1)*(1-((2*$tile)/${z[$1]}))" | bc -l)
      maxlat=$(echo "scale=10; ((a((e($yx)-(1/e($yx)))/2))*180)/(4*a(1))" | bc -l)
      tile=$(echo "scale=10; (${y[$1]}+${j[$1]}+1+$os)" | bc -l)
      tile=$(echo "scale=10; if ($tile >= ${z[$1]}) ${z[$1]}-1 else $tile" | bc)
      yx=$(echo "scale=10; 4*a(1)*(1-((2*$tile)/${z[$1]}))" | bc -l)
      minlat=$(echo "scale=10; ((a((e($yx)-(1/e($yx)))/2))*180)/(4*a(1))" | bc -l)
      bb="$minlat,$minlon,$maxlat,$maxlon"
		  if [ $minlat = 0 ]; then minlat=-85.0; fi
      if [ $ns -ne 0 ]; then
        if [ ${zoom[$1]} -lt 9 ]; then
          osmosis -q --rx file=tmp/panel-z0.osm --bb top=$maxlat left=$minlon bottom=$minlat right=$maxlon completeWays=yes --wx file=tmp/rrpanel-z${zoom[$1]}.osm 2> /dev/null
        else
          osmosis -q --rx file=tmp/rrpanel-z$1.osm --bb top=$maxlat left=$minlon bottom=$minlat right=$maxlon completeWays=yes --wx file=tmp/rrpanel-z${zoom[$1]}.osm 2> /dev/null
        fi
        ns=$(grep -c seamark tmp/rrpanel-z${zoom[$1]}.osm)
      fi
      if [ ${zoom[$1]} -lt 12 ]; then
        if [ ${zoom[$1]} -eq 9 ]; then
echo "9 $tx $ty"
          if [ -e tiles/9/$tx/$ty.png -o $ns -ne 0 ]; then
            ../searender/searender ../searender/symbols/symbols.defs 9 $bb >tmp/rrpanel.svg <tmp/rrpanel-z9.osm
     		    inkscape tmp/rrpanel.svg -e tmp/tiles-9-$tx-$ty.png -d 11.25 -a 256:256:2304:2304 -y 0 -b "#000000" 1>/dev/null 2>/dev/null
 					fi
        fi
        if [ ${zoom[$1]} -eq 10 ]; then
		      if [ -e tiles/10/$tx/$ty.png -o $ns -ne 0 ]; then
            ../searender/searender ../searender/symbols/symbols.defs 10 $bb >tmp/rrpanel.svg <tmp/rrpanel-z10.osm
            inkscape tmp/rrpanel.svg -e tmp/tiles-10-$tx-$ty.png -d 22.5 -a 256:256:1280:1280 -y 0 -b "#000000" 1>/dev/null 2>/dev/null
		      fi
        fi
        if [ ${zoom[$1]} -eq 11 ]; then
		      if [ -e tiles/11/$tx/$ty.png -o $ns -ne 0 ]; then
            ../searender/searender ../searender/symbols/symbols.defs 11 $bb >tmp/rrpanel.svg <tmp/rrpanel-z11.osm
 	          inkscape tmp/rrpanel.svg -e tmp/tiles-11-$tx-$ty.png -d 45 -a 256:256:768:768 -y 0 -b "#000000" 1>/dev/null 2>/dev/null
		      fi
        fi
        search ${zoom[$1]} $tx $ty
      else
        clean=0
        check 12 $tx $ty
        if [ -e tiles/12/$tx/$ty.png -o $clean -ne 0 -o $ns -ne 0 ]; then
  	      while [ $(ls tmp/ | grep -c _12.osm) -ne 0 ]; do
		        sleep 20
		      done
          cp tmp/rrpanel-z12.osm tmp/$tx\_$ty\_$bb\_12.osm
        fi
      fi
    done
  done
}

ns=1
while true; do
  search 0 0 0
done
