#!/bin/bash

download () {
	echo "$(date) fetching next db file" >> log.txt
	if [ -e merge.osm ]; then rm merge.osm; fi
	while [ ! -e merge.osm ]; do
		cat types.txt | while read type; do
			touch sort.osm
			while [ -e sort.osm ]; do
					while ! wget -q -T 60 --limit-rate=500k -O xapi.osm http://jxapi.openstreetmap.org/xapi/api/0.6/*[seamark:type=$type]; do
					echo "$(date) wget error - retrying JXAPI" >> log.txt
					sleep 60
				done
				if osmosis -q --rx file=xapi.osm --s --wx file=sort.osm 2> /dev/null; then
					rm xapi.osm
					if [ -e merge.osm ]; then
						osmosis -q --rx file=merge.osm --rx file=sort.osm --m --wx file=tmp.osm 2> /dev/null
						mv tmp.osm merge.osm
						rm sort.osm
					else
						mv sort.osm merge.osm
					fi
				else
					echo "$(date) bad data" >> log.txt
					touch sort.osm
				fi
			done
		done
	done
	../smfilter/smfilter -a 0.01 < merge.osm > next.osm
	rm merge.osm
	echo "$(date) successful download" >> log.txt
}

if [ $# -eq 0 ]; then
	if [ -e datestamp ]; then
		previous=$(cat datestamp)
	else
		previous=0
	fi
elif [ $# -eq 1 ]; then
	previous=$1
else
	previous=0
fi

if [ $# -eq 3 ]; then
	cp world.osm panel-z$1.osm
	./search $1 $2 $3 $previous
	echo "$(date) Rendering of $1 $2 $3 complete" >> log.txt
	exit
fi

while true; do
	if [ ! -e next.osm ]; then
		download
	fi
	mv next.osm world.osm
	cp world.osm tmp/panel-z0.osm
	./search 0 0 0 $previous
	latest=$previous
	timestamp=$(../util/checkdate world.osm)
	if [ $timestamp \> $latest ]; then
		latest=$timestamp;
	fi;
	echo "$latest" > datestamp
	echo "$(date) Rendered to latest timestamp: $latest" >> log.txt
	if [ -e stop ]; then
		echo "$(date) Stopped" >> log.txt
		exit
	fi
	if [ -e pause ]; then
		echo "$(date) Paused" >> log.txt
		while [ -e pause ]; do
			sleep 300
		done
		echo "$(date) Resumed" >> log.txt
	fi
		latest=$(cat datestamp)
	if [ $previous == $latest ]; then
		sleep 1800
	fi
	previous=$latest
done
